import React from "react";
import Head from 'next/head';
import SwiperCore, { Navigation } from 'swiper';
import { Swiper, SwiperSlide } from 'swiper/react';
import styles from '../styles/Contacts.module.scss';
import 'swiper/swiper-bundle.css';
import { Header } from '../containers/Header/Header';
import { Footer } from '../containers/Footer/Footer';
import { getGallery } from '../services/gallery.service';

SwiperCore.use([Navigation]);


function Gallery({ containerRef, posts, title }) {
  return (
    <div className={styles.container} data-scroll-container ref={containerRef} id='app'>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main data-scroll-section>
        <h1>Contact Template</h1>
          <Swiper
                className={styles['swiper-wrap']}
                spaceBetween={0}
                navigation
                slidesPerView={1}
                onSlideChange={() => {}}
                onSwiper={() => {}}
              >
                {posts.map((post, index) => (
                      <SwiperSlide key={index}>
                        <img  
                          className={styles['swiper-image']} 
                          alt="some" key={index} 
                          src={post.img.url}/>
                        </SwiperSlide>
                ))}
          </Swiper>
      </main>
      <Footer />
    </div>
  );
}

export async function getStaticProps() {
    // Call an external API endpoint to get posts.
    // You can use any data fetching library
    const res = await getGallery();
    const posts = await res.data;
    // const array = Object.keys(posts.routes);
    // By returning { props: { posts } }, the Blog component
    // will receive `posts` as a prop at build time
    return {
      props: {
        posts: posts.acf.block_2.gallery,
        title: posts.title.rendered,
        other: posts,
      },
    }
}
export default Gallery
