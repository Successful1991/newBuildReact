import React, { useRef } from "react";
import Head from 'next/head';
import SwiperCore, { Navigation } from 'swiper';
import { useTranslation } from 'next-i18next'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import { Swiper, SwiperSlide } from 'swiper/react';
import { Container } from '@material-ui/core';
import styles from '../styles/Contacts.module.scss';
import 'swiper/swiper-bundle.css';
import { Header } from '../containers/Header/Header';
import { Footer } from '../containers/Footer/Footer';
import { getGallery } from '../services/gallery.service';

SwiperCore.use([Navigation]);


function Gallery({ posts, title, }) {
  // let scrollerProxy = useScrollerProxy();
  const { t } = useTranslation('common');
  const ref = useRef(null);
  const ref1 = useRef(null);
  const ref2 = useRef(null);
  const ref3 = useRef(null);
  // useEffect(() => {
  //   ScrollTrigger.refresh();
  //     gsap.from(ref.current, {
  //       scrollTrigger: {
  //         trigger: ref.current,
  //         scrub: 0.5,
  //         end: '100%',
  //       },
  //       autoAlpha: 0.5,
  //     });
  //     gsap.from(ref1.current, {
  //       scrollTrigger: {
  //         trigger: ref1.current,
  //         scrub: 0.5,
  //         end: '100% bottom',
  //       },
  //       xPercent: 20,
  //     });
  //     gsap.from(ref2.current, {
  //       scrollTrigger: {
  //         trigger: ref2.current,
  //         scrub: 0.5,
  //         end: '100% bottom',
  //       },
  //       xPercent: -20,
  //     });
  //     gsap.timeline( {
  //       scrollTrigger: {
  //         trigger: ref3.current,
  //         scrub: 0.5,
  //       },
  //     })
  //     .fromTo(ref3.current.querySelector('h2'), { y: 100 }, { y: -100 });
  // }, []);
  return (
    <div className={styles.container} data-scroll-container id='app'>
      <Head>
        <title>{title || 'Next Js App'}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header translate={t}/>

  
      <Container>
        <h1>Gallery Template {t('h1')}</h1>
          <Swiper
                className={styles['swiper-wrap']}
                spaceBetween={0}
                navigation
                slidesPerView={1}
                onSlideChange={() => {}}
                onSwiper={() => {}}
              >
                {posts.map((post, index) => (
                      <SwiperSlide key={index}>
                        <img  
                          className={styles['swiper-image']} 
                          alt="some" key={index} 
                          src={post.img.url}/>
                        </SwiperSlide>
                ))}
          </Swiper>
          </Container>
          <div ref={ref} className={styles['full-screen']}/>
          <div ref={ref1} className={styles['full-screen']}/>
          <div ref={ref2} className={styles['full-screen']}/>
          <div ref={ref3} className={styles['full-screen']}>
            <h2>Hello World</h2>
          </div>
          <div className={styles['full-screen']}/>
          <div className={styles['full-screen']}/>
          <div className={styles['full-screen']}/>
        <Footer />
    </div>
  );
}

export async function getStaticProps({ locale }) {
    // Call an external API endpoint to get posts.
    // You can use any data fetching library
    const res = await getGallery(locale);
    const posts = await res.data;

    // const array = Object.keys(posts.routes);
    // By returning { props: { posts } }, the Blog component
    // will receive `posts` as a prop at build time
    return {
      props: {
        posts: posts.acf.block_2.gallery,
        title: posts.seo_title,
        other: posts,
        ...await serverSideTranslations(locale, ['common']),
      },
    }
}
export default Gallery
